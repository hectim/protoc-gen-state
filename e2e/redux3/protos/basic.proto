syntax = "proto3";

package state; // match package of state/options.proto
option go_package="github.com/tcncloud/protoc-gen-state/e2e/redux3/protos;protos";

import "state/options.proto";
import "e2e/redux3/protos/readinglist/readinglist.proto";

option (debounce) = 510;
option (debug) = false;
option (default_retries) = 0;
option (default_timeout) = 3000;
option (hostname_location) = "config.host";
option (port) = 9090;
option (protoc_ts_path) = "../";
/* option (auth_token_location) = "config.token"; */

message ReduxState {
  option (state_options).type = REDUX_STATE;
  //// Used for unit tests, do not remove ////
  repeated readinglist.Book library = 1 [
    (method).create = "readinglist.ReadingList.CreateBook",
    (method).update = "readinglist.ReadingList.UpdateBook",
    (method).delete = "readinglist.ReadingList.DeleteBook",
    (method).list = "readinglist.ReadingList.ReadAllBooks"
  ];
  readinglist.Book book_of_the_month = 2 [
    (method).create = "readinglist.ReadingList.CreateBook",
    (method).update = "readinglist.ReadingList.UpdateBook",
    (method).delete = "readinglist.ReadingList.DeleteBook",
    (method).get = "readinglist.ReadingList.ReadBook"
  ];
  // TODO map
  // TODO oneof
  // TODO enum
  //// End unit test usage ////
  readinglist.Book timeout_book = 3 [
    (method).get = "readinglist.ReadingList.ReadBook",
    (method_timeout).get = -1 // intentional timeout
  ];
}

message CustomActions {
  option (state_options).type = CUSTOM_ACTION;
  //// Used for unit tests ////
  readinglist.Book error_book = 1 [
    (method).custom = "readinglist.ReadingList.ErrorOut",
    (retries) = 0
  ];
  //// End unit tests ////
}
